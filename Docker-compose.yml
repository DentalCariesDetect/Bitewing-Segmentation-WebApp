version: '3.8'
services:
  frontend:
    container_name: frontend
    build: ./Frontend
    environment:
      - NODE_ENV=${NODE_ENV}
    volumes:
      - ./img:/app/public/img
    ports:
      - 3000:3000
    restart: always
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:${POSTGRES_PORT}
    restart: unless-stopped
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - 5050:80
    depends_on:
      - postgres
    restart: unless-stopped
  fastapi-backend:
    container_name: fastapi-backend
    build: ./Backend
    environment:
      - NODE_ENV=${NODE_ENV}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - JWT_SECRET=${JWT_SECRET}
    volumes:
      - ./img:/app/img
    ports:
      - 8000:80
    depends_on:
      - postgres
    restart: always
  golang-backend:
    container_name: golang-backend
    build: ./Backend_Go
    environment:
      - NODE_ENV=${NODE_ENV}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PROTOCOL=${POSTGRES_PROTOCOL}
      - POSTGRES_SSL_MODE=${POSTGRES_SSL_MODE}
      - POSTGRES_TIMEZONE=${POSTGRES_TIMEZONE}
      - ECHO_PORT=${ECHO_PORT}
      - JWT_SECRET=${JWT_SECRET}
    volumes:
      - ./img:/root/img
    ports:
      - ${ECHO_PORT}:${ECHO_PORT}
    depends_on:
      - postgres
    restart: always
volumes:
  postgres_data:
